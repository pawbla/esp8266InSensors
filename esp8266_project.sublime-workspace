{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"ca",
				"calcMovingAvg"
			],
			[
				"w",
				"writer"
			],
			[
				"tr",
				"tr\tTag"
			],
			[
				"a",
				"authentication"
			],
			[
				"B",
				"B5_raw"
			],
			[
				"pre",
				"Pressure"
			],
			[
				"UT",
				"UT_nc"
			],
			[
				"read",
				"readCalibration"
			],
			[
				"sda",
				"sdaP"
			],
			[
				"dht",
				"dht11"
			],
			[
				"connect",
				"connectToLAN"
			]
		]
	},
	"buffers":
	[
		{
			"file": "esp8266.py",
			"settings":
			{
				"buffer_size": 3726,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "main.py",
			"settings":
			{
				"buffer_size": 57,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "authentication.py",
			"settings":
			{
				"buffer_size": 516,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "def listenOnSocketServer(self):\n\t\t\"\"\" This method is listening on created socket server \"\"\"\n\t\t# in this method shall be executed every sensors' measurements\n\t\tloop = 0\n\t\twhile True:\n\t\t\tprint(\"===== loop ====== \" + str(loop))\n\t\t\tcon, addr = self.s.accept()\n\t\t\tprint('Connection from: ', addr)\n\t\t\t# here shall be executed all measurements and getting measured values\n\t\t\t#dht = self.measureTempAndHum()\n\t\t\t#get request and send message\n\t\t\ttry:\n\t\t\t\trec = con.recv(500)\n\t\t\t\tprint(\"Received message: \" + str(rec))\n\t\t\texcept OSError as e:\n\t\t\t\tprint(\"An error has occured: \", e)\n\t\t\tif self.authentication.authenticate(rec):\n\t\t\t\t#msg = self.prepareMessage(dht[0], dht[1])\n\t\t\t\tmsg = self.prepareMessage(1, 2)\n\t\t\telse:\n\t\t\t\tmsg = self.authentication.message()\n\t\t\tcon.send(msg)\n\t\t\tcon.close()\n\t\t\tloop = loop + 1\n\t\tpass\t\t\n\n\n\t\tdef createSocketServer(self):\n\t\t\"\"\" This metod allows to create a server which will be listen a connection on created socket \"\"\"\n\t\tprint(\"Create socket server\")\n\t\tport = 80\n\t\taddr = socket.getaddrinfo('0.0.0.0', port)[0][-1]\n\t\ttry:\n\t\t\tself.s = socket.socket()\n\t\t\tself.s.bind(addr)\n\t\t\tself.s.listen(1)\n\t\texcept OSError as e:\n\t\t\tprint(\"Error: \" + str(e))\n\t\t\tif ure.match('.*EADDRINUSE.*',str(e)):\n\t\t\t\tprint(\"Adrr\")\n\t\t\t\tmachine.reset()",
			"settings":
			{
				"buffer_size": 1244,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				"Syntax Check"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/E/Projects/HomeSystem/02_2_SW_ESP8266/esp8266InSensors"
	],
	"file_history":
	[
		"/E/Projects/HomeSystem/02_2_SW_ESP8266/esp8266InSensors/main.py",
		"/E/Projects/HomeSystem/02_2_SW_ESP8266/esp8266InSensors/esp8266_project.sublime-project",
		"/E/Projects/HomeSystem/02_2_SW_ESP8266/esp8266InSensors/authentication.py",
		"/E/Projects/HomeSystem/02_2_SW_ESP8266/esp8266InSensors/config.py",
		"/E/Projects/HomeSystem/02_2_SW_ESP8266/esp8266InSensors/config.json",
		"/E/Projects/HomeSystem/02_2_SW_ESP8266/esp8266InSensors/bmp180.py",
		"/E/Projects/HomeSystem/01_Documentation/mysql.txt",
		"/E/Projects/HomeSystem/06_ConfigFiles/RaspberryPi/application.properties",
		"/E/Projects/HomeSystem/98_LogsForAnalyzing/log.log",
		"/C/Tomcat/apache-tomcat-9.0.12/conf/server.xml",
		"/E/Projects/HomeSystem/06_ConfigFiles/RaspberryPi/log4j2.xml",
		"/E/Projects/HomeSystem/05_Examples/newPageExample/trae.html",
		"/E/Projects/HomeSystem/02_0_SW_Raspberry/logs/log.log",
		"/E/Projects/HomeSystem/02_0_SW_Raspberry/logs/warnTrace.log",
		"/E/Projects/HomeSystem/02_2_SW_ESP8266/esp8266InSensors/esp8266.py",
		"/C/Users/blach/Desktop/MANIFEST.MF",
		"/C/Users/blach/Desktop/log4j.properties",
		"/C/Users/blach/Desktop/phone/log4j.properties",
		"/E/Projects/HomeSystem/06_ConfigFiles/ESP8266/config.json",
		"/E/Projects/HomeSystem/02_2_SW_ESP8266/esp8266InSensors/examples.py",
		"/E/Projects/HomeSystem/01_Documentation/setup.txt",
		"/E/Projects/HomeSystem/02_2_SW_ESP8266/esp8266InSensors/setup.txt",
		"/D/Projekty/HomeSystem/WiFiModule_ESP8266_SW/config.py",
		"/D/Projekty/HomeSystem/EmbeddedApplication/traces/traces.log",
		"/D/Projekty/HomeSystem/WiFiModule_ESP8266_SW/main.py",
		"/D/Projekty/HomeSystem/WiFiModule_ESP8266_SW/esp8266.py",
		"/D/Projekty/HomeSystem/WiFiModule_ESP8266_SW/bmp180.py",
		"/D/Projekty/HomeSystem/WiFiModule_ESP8266_SW/config.json",
		"/D/Projekty/HomeSystem/WiFiModule_ESP8266_SW/examples.py",
		"/D/Projekty/HomeSystem/WiFiModule_ESP8266_SW/dht11.py"
	],
	"find":
	{
		"height": 40.0
	},
	"find_in_files":
	{
		"height": 104.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"listenOnSocketServer",
			"pressu",
			"bmp",
			"measure",
			"Starting EmbeddedApp",
			"\\[[A-Za-z]*Sensor|\\[Rest",
			"[GET]}: There is already 'homeController' bean method",
			"decode",
			"header",
			"self.UT_nc",
			"json",
			"self.UT_nc",
			"UP"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "esp8266.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3726,
						"regions":
						{
						},
						"selection":
						[
							[
								1019,
								1019
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 437.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "main.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 57,
						"regions":
						{
						},
						"selection":
						[
							[
								55,
								55
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "authentication.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 516,
						"regions":
						{
						},
						"selection":
						[
							[
								155,
								155
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1244,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								1244
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 39.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 126.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Python/Python.sublime-build",
	"project": "esp8266_project.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 153.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
